<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Saturday, October 01, 2016, 2:43 PM -->
<!-- MuClient version 5.01 -->

<!-- Plugin "Questmaster" generated by Plugin Wizard -->


<muclient>
<plugin
   name="Questmaster"
   author="Meaningless"
   id="fce2abf6aa08bcf0d73e704a"
   language="Lua"
   purpose="Manage Quest Information"
   date_written="2016-10-01 14:38:24"
   requires="5.01"
   version="1.0"
   save_state="y"
   >

</plugin>
<!--  Get our standard constants -->
<include name="constants.lua"/>

<timers>
  <timer
   name="TNQTimer"
   script="UpdateWaitTimer"
   enabled="y"
   minute="1"
   at_time="n"
   >
  </timer>

</timers>

<script>
<![CDATA[

require "serialize"
require "movewindow"
require "commas"
require "gmcphelper"
require "copytable"
require "checkplugin"

 -- some globals -- 
background_colour     = 0x000000
title_color			  = 0xcab9ac
title_border_color_1  = 0xf7ebdd
title_border_color_2  = 0xb09784
border_colour         = 0xcccccc
font_colour           = 0xffffff
default_width         = 200
default_height        = 150
default_x             = 50
default_y             = 250
LEFT_MARGIN     = 10
TOP_MARGIN      = 5
TITLE_MARGIN = 3
default_font_size = 9
default_font_name = "Consolas"

win = GetPluginID()
function OnPluginListChanged ()
	do_plugin_check_now ("abc1a0944ae4af7586ce88dc", "aard_repaint_buffer") -- check we have the repaint buffer plugin
	do_plugin_check_now ("3e7dedbe37e44942dd46d264", "aard_GMCP_handler")    -- check we have GMCP plugin
	do_plugin_check_now ("462b665ecb569efbf261422f", "aard_miniwindow_z_order_monitor") -- check we have z order plugin
end

function DrawWindow()

	-- draw title
	minTitleWidth = 4 + TITLE_MARGIN * 2 + WindowTextWidth(win, font_id, "QuestMaster", false) -- 4 is the number of pixels of the border
	minTitleHeight = TITLE_MARGIN * 2 + line_height -- remove 2 pix for the upper/lower space for rendering accents
	
	-- get window size
	contentHeight = TOP_MARGIN * 2
	contentWidth = 0
	if page_built then
		for i, v in ipairs(questInfoDisplay) do
			top = TOP_MARGIN + (i-1) * line_height
			left = LEFT_MARGIN * 2 + WindowTextWidth(win, font_id, v.label, false) + WindowTextWidth(win, font_id, v.info, false)
			contentHeight = contentHeight + line_height
			contentWidth = math.max(contentWidth, left)
			
		end
	else
		contentWidth = LEFT_MARGIN * 2 + WindowTextWidth(win, font_id, "Waiting for Quest Information", false)
		contentHeight = TOP_MARGIN * 2 + line_height
	end
	
	-- resize window
	width = math.max(contentWidth, minTitleWidth)
	height = contentHeight + minTitleHeight
	
	WindowDeleteAllHotspots(win)
	
	WindowResize(win, width, height, background_colour)
	
	-- draw window
	WindowRectOp(win, 2, 0, 0, 0, 0, background_colour) -- blank 
	
	-- draw borders
	WindowRectOp (win, 1, 0, 0, 0, 0, border_colour, 15)
	WindowRectOp (win, 1, 1, 1, -1, -1, 0x777777, 15)
	
	-- draw title
	WindowRectOp(win, 2, 1, 1, -1, minTitleHeight, title_color) -- title
	WindowRectOp(win, 4, 1, 1, -1, minTitleHeight, title_border_color_1, title_border_color_2) -- title border
	WindowText(win, font_id, "QuestMaster", TITLE_MARGIN + 2, TITLE_MARGIN, 0, 0, 0x000000) -- title text
	
	if page_built then
		for i, v in ipairs(questInfoDisplay) do
			top = minTitleHeight + TOP_MARGIN + (i-1) * line_height
			left = LEFT_MARGIN
			left = left + WindowText(win, font_id, v.label, left, top, 0, 0, font_colour)
			
			-- add hyperlink
			if v.label == "Room      : " then
				AddMouseClickHotspot("MapHotspot", left, top , left + WindowTextWidth(win, font_id, v.info, false), top + line_height - 1, 1)
			elseif v.label == "Area      : " then
				AddMouseClickHotspot("AreaHotspot", left, top , left + WindowTextWidth(win, font_id, v.info, false), top + line_height - 1, 1)
			end
			left = left + WindowText(win, font_id, v.info, left, top, 0, 0, font_colour)
		end
	else
		left = LEFT_MARGIN + WindowText(win, font_id, "Waiting for Quest Information", LEFT_MARGIN, minTitleHeight + TOP_MARGIN, 0, 0, font_colour)
	end

	-- Add the drag handler so they can move the window around
	movewindow.add_drag_handler (win, 1, 1, -1, minTitleHeight, 1) -- drag the title
	AddMouseClickHotspot("RightClickHotSpot", 1, minTitleHeight + 1, width, height)
	BroadcastPlugin (999, "repaint")
end

function AddMouseClickHotspot(hotspot_id, left, top, right, bottom, cursor)
	if cursor == nil then
		cursor = 0
	end 
	WindowAddHotspot(win, hotspot_id,  
		left, top, right, bottom,        -- rectangle
		"",        -- MouseOver
		"",  -- CancelMouseOver
		"",        -- MouseDown
		"",  -- CancelMouseDown
		"MouseUp",          -- MouseUp
		"",  -- tooltip text
		cursor, -- cursor
		0)  -- flags
end -- AddMouseClickHotspot

function UpdateWaitTimer(timerName)
	if page_built then
	
		EnableTimer("TNQTimer")
		if (questInfo.action == 'comp' or questInfo.action == 'fail' or questInfo.wait ~= nil) then
			questInfoDisplay = {}
			local TNQ = math.ceil((timeOfNextQuest - os.time() ) / 60)
		
			table.insert(questInfoDisplay, {label="Status : ", info="Waiting", colour=0xffffff})
			table.insert(questInfoDisplay, {label="TNQ    : ", info=string.format("%d", TNQ) .. " min", colour=0xffffff})
			DrawWindow()
			
		elseif (questInfo.action == 'start' or questInfo.timer ~= nil) then
			GenerateQuestTargetInfo(questInfo)
			DrawWindow()
		elseif questInfo.action == 'killed' then
			GeneratedKilledInfo(questInfo)
			DrawWindow()
		end
	end
end -- UpdateWaitTimer

function GenerateQuestTargetInfo(questInfo)
	questInfoDisplay = {}
	local TimeToComplete = math.ceil((timeOfQuestEnd - os.time()) / 60)
	table.insert(questInfoDisplay, {label="Target    : ", info=questInfo.targ, colour=0xffffff})
	table.insert(questInfoDisplay, {label="Area      : ", info=questInfo.area, colour=0xffffff, hyperlink=""})
	table.insert(questInfoDisplay, {label="Room      : ", info=questInfo.room, colour=0xffffff, hyperlink=""})
	table.insert(questInfoDisplay, {label="Time Left : ", info=string.format("%d", TimeToComplete) .. " min", colour=0xffffff})
end -- GenerateQuestTargetInfo

function GeneratedKilledInfo(questInfo)
	questInfoDisplay = {}
	local TimeToComplete = math.ceil((timeOfQuestEnd - os.time()) / 60)
	table.insert(questInfoDisplay, {label="Your Quest Target is Killed.", info="", colour=0xff0000})
	table.insert(questInfoDisplay, {label="Return to the Quest Master.", info="", colour=0xff0000})
	table.insert(questInfoDisplay, {label="Time Left:  ", info=string.format("%d", TimeToComplete) .. " min", colour=0xffffff})
end -- GeneratedKilledInfo

function BuildQuestInfo(questInfo)
	questInfoDisplay = {}
	
	if questInfo.action == 'ready' or  questInfo.status == 'ready' then
		table.insert(questInfoDisplay, {label="Q: ", info="You can now quest again.", colour=0xffffff})
	elseif questInfo.action == 'start' or questInfo.timer ~= nil then
		timeOfQuestEnd =  os.time() + questInfo.timer * 60
		GenerateQuestTargetInfo(questInfo)
	elseif questInfo.action == 'reset' or questInfo.timer ~= nil then
		timeOfNextQuest = os.time() + questInfo.timer * 60
		table.insert(questInfoDisplay, {label="Status : ", info="Waiting", colour=0xffffff})
		table.insert(questInfoDisplay, {label="TNQ    : ", info=questInfo.timer .. " min", colour=0xffffff})
	elseif questInfo.action == 'fail' or questInfo.action == 'comp' or questInfo.wait ~= nil then
		timeOfNextQuest = os.time() + questInfo.wait * 60
		table.insert(questInfoDisplay, {label="Status : ", info="Waiting", colour=0xffffff})
		table.insert(questInfoDisplay, {label="TNQ    : ", info=questInfo.wait .. " min", colour=0xffffff})
	elseif questInfo.action == 'timeout' then
		timeOfNextQuest = os.time() + questInfo.wait * 60
		table.insert(questInfoDisplay, {label="Status : ", info="Waiting", colour=0xffffff})
		table.insert(questInfoDisplay, {label="TNQ    : ", info=questInfo.wait .. " min", colour=0xffffff})
	elseif questInfo.action == 'killed' then
		GeneratedKilledInfo(questInfo)
	elseif questInfo.action == 'warning' then

	end
	page_built = true
	DrawWindow()
end -- CreateQuestMW

function OnPluginBroadcast (msg, id, name, text)
	if id == '3e7dedbe37e44942dd46d264' then -- aard gmcp handler
		if text:find("comm.quest") then
			res, gmcparg = CallPlugin("3e7dedbe37e44942dd46d264","gmcpval","comm.quest")
			questInfo = assert (loadstring ('return ' .. gmcparg or ""))()
			BuildQuestInfo(questInfo)
		end
	end
end -- OnPluginBroadcast

function RightClickMenu()
	selection = WindowMenu(win, WindowInfo(win, 14), WindowInfo(win, 15),
							"Change Font | - | Bring To Front | Send To Back")
	
	if selection == "Bring To Front" then
		CallPlugin("462b665ecb569efbf261422f","boostMe", win)
	elseif selection == "Send To Back" then
		CallPlugin("462b665ecb569efbf261422f","dropMe", win)
	elseif selection == "Change Font" then
		selectedFont = utils.fontpicker (font_name, font_size) --font dialog
		if selectedFont then
			font_name = selectedFont.name
			font_size = selectedFont.size
			SetVariable("font_name", font_name)
			SetVariable("font_size", font_size)
			movewindow.save_state(win)
			SetFontInfo()
			DrawWindow()
		end
	end
end -- RightClickMenu

function MouseUp(flags, hotspot_id, win)
	if bit.band (flags, miniwin.hotspot_got_rh_mouse) ~= 0 and hotspot_id == "RightClickHotSpot" then
		RightClickMenu()
	elseif bit.band (flags, miniwin.hotspot_got_lh_mouse) ~= 0 and hotspot_id == "AreaHotspot" then
		print("clicked on area")
		if RuntoKey[questInfo.area] ~= nil then
			world.Send("runto " .. RuntoKey[questInfo.area])
		else
			print("could not find " .. questInfo.area .. " in our list.")
		end
	elseif bit.band (flags, miniwin.hotspot_got_lh_mouse) ~= 0 and hotspot_id == "MapHotspot" then
		print("clicked on room")
		if GaardKey[questInfo.area] ~= nil then
			OpenBrowser("http://maps.gaardian.com/index.php?areaid=" .. GaardKey[questInfo.area])
		else
			print("could not find " .. questInfo.area .. " in our list.")
		end
	end
	return true
end

function LeftClickOnly(flags, hotspot_id, win)
   if bit.band (flags, miniwin.hotspot_got_rh_mouse) ~= 0 then
      return true
   end
   return false
end

function SetFontInfo()
	WindowFont (win, font_id, font_name, font_size, false, false, false, false) --- Grab font size settings.
	font_height = WindowFontInfo (win, font_id, 1) - WindowFontInfo (win, font_id, 4) + 1 -- height
	font_width  = WindowFontInfo (win, font_id, 6)  -- avg width
	line_height = font_height + 1
end -- SetFontInfo

function OnPluginInstall ()
	WindowCreate (win, 600, 600, 1, 1, 0, 0, background_colour) 

	font_id        = "Questmaster_font"
	local fonts = utils.getfontfamilies()
	font_name = GetVariable("font_name") or default_font_name
	font_size = tonumber(GetVariable("font_size")) or default_font_size
	
	SetFontInfo()

	--- Pull some state variables.
	background_colour = tonumber(GetVariable ("background_colour")) or background_colour
	height = tonumber(GetVariable ("height")) or default_height
	width = tonumber(GetVariable ("width")) or default_width

	--- install the window movement handler, get back the window position.
	windowinfo = movewindow.install (win, miniwin.pos_top_right, miniwin.create_absolute_location, false, nil, {mouseup=MouseUp, mousedown=LeftClickOnly, dragmove=LeftClickOnly, dragrelease=LeftClickOnly},{x=default_x, y=default_y})

	--- Setup the window
	check(WindowCreate(win, 
		windowinfo.window_left, windowinfo.window_top,
		width, height,
		windowinfo.window_mode,
		windowinfo.window_flags,
		background_colour))
	WindowShow(win, true)
	
	DrawWindow()

	if IsConnected() then
		Send_GMCP_Packet("request quest")
	end
end -- OnPluginInstall

function OnPluginDisable ()
	WindowShow( win, false )
end -- OnPluginDisable

function OnPluginClose ()
	OnPluginDisable()
	WindowDelete(win)
end -- OnPluginClose

function OnPluginEnable ()
	WindowShow( win, true)

	if IsConnected() then
		Send_GMCP_Packet("request quest")
	end

end -- OnPluginEnable


function OnPluginConnect ()
	WindowShow( win, true)

	Send_GMCP_Packet("request quest")

end -- function OnPluginConnect

function OnPluginDisconnect ()

end -- function OnPluginConnect



function OnPluginSaveState ()
	-- save window current location for next time  
	movewindow.save_state (win)
	SetVariable ("enabled", tostring (GetPluginInfo (GetPluginID (), 17)))
	SetVariable ("background_colour", background_colour)
	SetVariable ("width", width)
	SetVariable ("height", height)
	SetVariable ("font_name", font_name)
	SetVariable ("font_size", font_size)
end -- function OnPluginSaveState

-- set up runto keywords
RuntoKey = {}
RuntoKey["Kimr's Farm"] = "farm"
RuntoKey["Lowlands Paradise '96"] = "lowlands"
RuntoKey["The Forest of Li'Dnesh"] = "lidnesh"
RuntoKey["The Path of the Believer"] = "believer"
RuntoKey["Tournament Camps"] = "camps"
RuntoKey["Art of Melody"] = "melody"
RuntoKey["The Call of Heroes"] = "callhero"
RuntoKey["Hotel Orlando"] = "orlando"
RuntoKey["Land of Legend"] = "legend"
RuntoKey["Sen'narre Lake"] = "sennarre"
RuntoKey["The Land of the Beer Goblins"] = "beer"
RuntoKey["Gallows Hill"] = "gallows"
RuntoKey["Jotunheim"] = "jotun"
RuntoKey["Kingsholm"] = "kingsholm"
RuntoKey["Challenge Area"] = "challenge"
RuntoKey["The Aylorian Academy"] = "academy"
RuntoKey["The Grand City of Aylor"] = "aylor"
RuntoKey["A Bad Trip"] = "badtrip"
RuntoKey["Alagh, the Blood Lands"] = "alagh"
RuntoKey["Gelidus"] = "gelidus"
RuntoKey["The Continent of Mesolar"] = "mesolar"
RuntoKey["The Dark Continent, Abend"] = "abend"
RuntoKey["The Laser Zone"] = "lasertwo"
RuntoKey["The Southern Ocean"] = "southern"
RuntoKey["The Uncharted Oceans"] = "uncharted"
RuntoKey["The Warzone"] = "warzone"
RuntoKey["Vidblain, the Ever Dark"] = "vidblain"
RuntoKey["Aardwolf Birthday Area"] = "birthday"
RuntoKey["Chaprenula's Laboratory"] = "lab"
RuntoKey["Siren's Oasis Resort"] = "sirens"
RuntoKey["The Fire Swamp"] = "fireswamp"
RuntoKey["The First Ascent"] = "ascent"
RuntoKey["The Graveyard"] = "graveyard"
RuntoKey["Den of Thieves"] = "thieves"
RuntoKey["Giant's Pet Store"] = "petstore"
RuntoKey["Sundered Vale"] = "vale"
RuntoKey["The Amusement Park"] = "amusement"
RuntoKey["The Chessboard"] = "chessboard"
RuntoKey["Child's Play"] = "childsplay"
RuntoKey["Dortmund"] = "dortmund"
RuntoKey["Canyon Memorial Hospital"] = "canyon"
RuntoKey["Fantasy Fields"] = "fantasy"
RuntoKey["The Gauntlet"] = "gauntlet"
RuntoKey["The Wood Elves of Nalondir"] = "woodelves"
RuntoKey["A Magical Hodgepodge"] = "hodgepodge"
RuntoKey["Aardwolf Zoological Park"] = "zoo"
RuntoKey["Brightsea and Glimmerdim"] = "glimmerdim"
RuntoKey["Cloud City of Gnomalin"] = "gnomalin"
RuntoKey["Olde Worlde Carnivale"] = "carnivale"
RuntoKey["The Infestation"] = "infest"
RuntoKey["The Shadows of Minos"] = "minos"
RuntoKey["The Town of Solan"] = "solan"
RuntoKey["War of the Wizards"] = "wizards"
RuntoKey["Hatchling Aerie"] = "hatchling"
RuntoKey["Adventures in Sendhia"] = "sendhian"
RuntoKey["Swordbreaker's Hoard"] = "hoard"
RuntoKey["Kerofk"] = "kerofk"
RuntoKey["The Chasm and The Catacombs"] = "chasm"
RuntoKey["Warrior's Training Camp"] = "wtc"
RuntoKey["All in a Fayke Day"] = "fayke"
RuntoKey["Guardian's Spyre of Knowledge"] = "spyreknow"
RuntoKey["Sho'aram, Castle in the Sand"] = "sandcastle"
RuntoKey["Fort Terramire"] = "terramire"
RuntoKey["New Thalos"] = "newthalos"
RuntoKey["Storm Mountain"] = "storm"
RuntoKey["Jungles of Verume"] = "verume"
RuntoKey["Wildwood"] = "wildwood"
RuntoKey["Dhal'Gora Outlands"] = "dhalgora"
RuntoKey["The Temple of Shouggoth"] = "shouggoth"
RuntoKey["Keep of the Kobaloi"] = "kobaloi"
RuntoKey["Aerial City of Cineko"] = "cineko"
RuntoKey["Kul Tiras"] = "kultiras"
RuntoKey["Necromancers' Guild"] = "necro"
RuntoKey["The UnderDark"] = "underdark"
RuntoKey["Realm of the Zodiac"] = "zodiac"
RuntoKey["Atlantis"] = "atlantis"
RuntoKey["Death's Manor"] = "manor"
RuntoKey["The Fractured Lands"] = "fractured"
RuntoKey["Weather Observatory"] = "weather"
RuntoKey["The Maelstrom"] = "maelstrom"
RuntoKey["Ancient Greece"] = "greece"
RuntoKey["Kingdom of Ahner"] = "ahner"
RuntoKey["Thandeld's Conflict"] = "conflict"
RuntoKey["Sheila's Cat Sanctuary"] = "cats"
RuntoKey["Mudwog's Swamp"] = "mudwog"
RuntoKey["Cradlebrook"] = "cradle"
RuntoKey["The Coral Kingdom"] = "coral"
RuntoKey["The Labyrinth"] = "labyrinth"
RuntoKey["Gold Rush"] = "goldrush"
RuntoKey["The Imperial City of Reme"] = "reme"
RuntoKey["The Silver Volcano"] = "volcano"
RuntoKey["Descent to Hell"] = "hell"
RuntoKey["Onyx Bazaar"] = "bazaar"
RuntoKey["The Blighted Tundra of Andarin"] = "andarin"
RuntoKey["Diamond Soul Revelation"] = "dsr"
RuntoKey["The Great Salt Flats"] = "salt"
RuntoKey["Raganatittu"] = "raga"
RuntoKey["The Darkside of the Fractured"] = "darkside"
RuntoKey["The Wobbly Woes of Woobleville"] = "wooble"
RuntoKey["Zangar's Demonic Grotto"] = "zangar"
RuntoKey["The Land of Oz"] = "landofoz"
RuntoKey["Paradise Lost"] = "paradise"
RuntoKey["The Flying Citadel"] = "citadel"
RuntoKey["Castle Vlad-Shamir"] = "vlad"
RuntoKey["Earth Plane 4"] = "earthplane"
RuntoKey["The Old Cathedral"] = "cathedral"
RuntoKey["Jenny's Tavern"] = "jenny"
RuntoKey["Storm Ships of Lem-Dagor"] = "lemdagor"
RuntoKey["The Yurgach Domain"] = "yurgach"
RuntoKey["Hedgehogs' Paradise"] = "hedge"
RuntoKey["Plains of Nulan'Boar"] = "nulan"
RuntoKey["The Goblin Fortress"] = "fortress"
RuntoKey["The Great City of Knossos"] = "knossos"
RuntoKey["The Killing Fields"] = "fields"
RuntoKey["The Palace of Song"] = "songpalace"
RuntoKey["The Three Pillars of Diatz"] = "diatz"
RuntoKey["Realm of Deneria"] = "deneria"
RuntoKey["The Upper Planes"] = "uplanes"
RuntoKey["The DarkLight"] = "darklight"
RuntoKey["The Ruins of Diamond Reach"] = "ruins"
RuntoKey["Rosewood Castle"] = "rosewood"
RuntoKey["Imperial Nation"] = "imperial"
RuntoKey["Aardington Estate"] = "aardington"
RuntoKey["The Tournament of Illoria"] = "illoria"
RuntoKey["Wayward Alehouse"] = "alehouse"
RuntoKey["Nenukon and the Far Country"] = "nenukon"
RuntoKey["The Lower Planes"] = "lplanes"
RuntoKey["The Relinquished Tombs"] = "tombs"
RuntoKey["Tai'rha Laym"] = "laym"
RuntoKey["The Empire of Talsa"] = "talsa"
RuntoKey["The Fabled City of Stone"] = "stone"
RuntoKey["Northstar"] = "northstar"
RuntoKey["Kobold Siege Camp"] = "siege"
RuntoKey["Snuckles Village"] = "snuckles"
RuntoKey["The Gladiator's Arena"] = "arena"
RuntoKey["The Realm of the Hawklords"] = "hawklord"
RuntoKey["Wedded Bliss"] = "bliss"
RuntoKey["Anthrox"] = "anthrox"
RuntoKey["Island of Lost Time"] = "losttime"
RuntoKey["Realm of the Firebird"] = "firebird"
RuntoKey["Deathtrap Dungeon"] = "deathtrap"
RuntoKey["Pompeii"] = "pompeii"
RuntoKey["The Scarred Lands"] = "scarred"
RuntoKey["The Monastery"] = "monastery"
RuntoKey["Dark Elf Stronghold"] = "stronghold"
RuntoKey["Elemental Chaos"] = "elemental"
RuntoKey["Halls of the Damned"] = "damned"
RuntoKey["Insanitaria"] = "insan"
RuntoKey["Ascension Bluff Nursing Home"] = "nursing"
RuntoKey["Dusk Valley"] = "duskvalley"
RuntoKey["Faerie Tales"] = "ft1"
RuntoKey["Seven Wonders"] = "wonders"
RuntoKey["Xyl's Mosaic"] = "xylmos"
RuntoKey["Prosper's Island"] = "prosper"
RuntoKey["Masquerade Island"] = "masq"
RuntoKey["Into the Long Night"] = "longnight"
RuntoKey["Sanctity of Eternal Damnation"] = "sanctity"
RuntoKey["Gnoll's Quarry"] = "quarry"
RuntoKey["The Marshlands of Agroth"] = "agroth"
RuntoKey["Tairayden Peninsula"] = "peninsula"
RuntoKey["The Stuff of Shadows"] = "stuff"
RuntoKey["Living Mines of Dak'Tai"] = "livingmine"
RuntoKey["Christmas Vacation"] = "xmas"
RuntoKey["The Misty Shores of Yarr"] = "yarr"
RuntoKey["Gilda And The Dragon"] = "gilda"
RuntoKey["The Eighteenth Dynasty"] = "dynasty"
RuntoKey["The Sanguine Tavern"] = "sanguine"
RuntoKey["Verdure Estate"] = "verdure"
RuntoKey["The Slaughter House"] = "slaughter"
RuntoKey["Faerie Tales II"] = "ftii"
RuntoKey["House of Cards"] = "cards"
RuntoKey["The Archipelago of Entropy"] = "entropy"
RuntoKey["The Uprising"] = "uprising"
RuntoKey["The Broken Halls of Horath"] = "horath"
RuntoKey["The School of Horror"] = "sohtwo"
RuntoKey["The Amazon Nation"] = "amazon"
RuntoKey["Tumari's Diner"] = "diner"
RuntoKey["The Blood Opal of Rauko'ra"] = "raukora"
RuntoKey["The School of Horror"] = "soh"
RuntoKey["Foolish Promises"] = "promises"
RuntoKey["The Dark Temple of Zyian"] = "zyian"
RuntoKey["The Drageran Empire"] = "drageran"
RuntoKey["Tir na nOg"] = "tirna"
RuntoKey["A Peaceful Giant Village"] = "village"
RuntoKey["The Reman Conspiracy"] = "remcon"
RuntoKey["The Mountains of Desolation"] = "desolation"
RuntoKey["The Desert Prison"] = "desert"
RuntoKey["Desert Doom"] = "ddoom"
RuntoKey["Imagi's Nation"] = "imagi"
RuntoKey["Nanjiki Ruins"] = "nanjiki"
RuntoKey["The Abyssal Caverns of Sahuagi"] = "sahuagin"
RuntoKey["The Cougarian Queendom"] = "cougarian"
RuntoKey["The Gathering Horde"] = "gathering"
RuntoKey["Unearthly Bonds"] = "bonds"
RuntoKey["The Empire of Aiighialla"] = "empire"
RuntoKey["Takeda's Warcamp"] = "takeda"
RuntoKey["Arisian Realm"] = "arisian"
RuntoKey["Winterlands"] = "winter"
RuntoKey["Battlefields of Adaldar"] = "adaldar"
RuntoKey["Sagewood Grove"] = "sagewood"
RuntoKey["Rebellion of the Nix"] = "rebellion"
RuntoKey["The Cataclysm"] = "cataclysm"
RuntoKey["The Ruins of Stormhaven"] = "stormhaven"
RuntoKey["Black Lagoon"] = "lagoon"
RuntoKey["Annwn"] = "annwn"
RuntoKey["Dread Tower"] = "dread"
RuntoKey["Helegear Sea"] = "helegear"
RuntoKey["The Covenant of Mistridge"] = "mistridge"
RuntoKey["The Witches of Omen Tor"] = "omentor"
RuntoKey["Tribal Origins"] = "origins"
RuntoKey["Avian Kingdom"] = "avian"
RuntoKey["Empyrean, Streets of Downfall"] = "empyrean"
RuntoKey["Eternal Autumn"] = "autumn"
RuntoKey["The Glamdursil"] = "glamdursil"
RuntoKey["The Tree of Life"] = "tol"
RuntoKey["Black Rose"] = "blackrose"
RuntoKey["Intrigues of Times Past"] = "times"
RuntoKey["Mount duNoir"] = "dunoir"
RuntoKey["The Deadlights"] = "deadlights"
RuntoKey["The Keep of Kearvek"] = "kearvek"
RuntoKey["Artificer's Mayhem"] = "mayhem"
RuntoKey["Tanra'vea"] = "tanra"
RuntoKey["The Astral Travels"] = "astral"
RuntoKey["The Blood Sanctum"] = "sanctum"
RuntoKey["The Nine Hells"] = "ninehells"
RuntoKey["The Partroxis"] = "partroxis"
RuntoKey["The Temple of Shal'indrael"] = "temple"
RuntoKey["Yggdrasil: The World Tree"] = "ygg"
RuntoKey["Kiksaadi Cove"] = "cove"
RuntoKey["Entrance to Hades"] = "hades"
RuntoKey["Nottingham"] = "nottingham"
RuntoKey["The Council of the Wyrm"] = "wyrm"
RuntoKey["The Icy Caldera of Mauldoon"] = "caldera"
RuntoKey["The Trouble with Gwillimberry"] = "gwillim"
RuntoKey["Crynn's Church"] = "crynn"
RuntoKey["Umari's Castle"] = "umari"
RuntoKey["A Genie's Last Wish"] = "geniewish"
RuntoKey["Afterglow"] = "afterglow"
RuntoKey["Andolor's Ocean Adventure Park"] = "oceanpark"
RuntoKey["Gypsy Caravan"] = "caravan"
RuntoKey["Icefall"] = "icefall"
RuntoKey["Journey to the Inferno"] = "inferno"
RuntoKey["Ketu Uplands"] = "ketu"
RuntoKey["Nebulous Horizon"] = "horizon"
RuntoKey["Oradrin's Chosen"] = "oradrin"
RuntoKey["Realm of the Sacred Flame"] = "firenation"
RuntoKey["The Cracks of Terra"] = "terra"
RuntoKey["The Earth Lords"] = "earthlords"
RuntoKey["The Nyne Woods"] = "nynewoods"
RuntoKey["The Titans' Keep"] = "titan"
RuntoKey["The Were Wood"] = "werewood"
RuntoKey["Qong"] = "qong"
RuntoKey["Radiance Woods"] = "radiance"
RuntoKey["Sea King's Dominion"] = "seaking"
RuntoKey["The Curse of the Midnight Fens"] = "fens"
RuntoKey["The Dungeon of Doom"] = "dundoom"
RuntoKey["The Realm of Infamy"] = "infamy"
RuntoKey["A Clearing in the Woods"] = "romani"
RuntoKey["Cathedral of the Elements"] = "cabal"
RuntoKey["Dark Temple of Zhamet"] = "rhabdo"
RuntoKey["Disciples of Hassan Clan Hall"] = "doh"
RuntoKey["Dominion Clan Area"] = "dominion"
RuntoKey["Isle of Anglesey"] = "druid"
RuntoKey["Loqui Clan Area"] = "loqui"
RuntoKey["Masaki Clan Area"] = "masaki"
RuntoKey["Midgaardian Publishing House"] = "gaardian"
RuntoKey["Old clan holding area 1"] = "oldclanone"
RuntoKey["Old clan holding area 2"] = "oldclantwo"
RuntoKey["Old clan holding area 3"] = "oldclanthr"
RuntoKey["Old clan holding area 4"] = "oldclanfou"
RuntoKey["Perdition Clan Area"] = "perdition"
RuntoKey["Rogues Clan Hall"] = "rogues"
RuntoKey["Secret Imm Project #69"] = "wolfmaze"
RuntoKey["The Bard Clan"] = "bard"
RuntoKey["The Boot Camp"] = "bootcamp"
RuntoKey["The Children of Ba'alzamon HQ"] = "baal"
RuntoKey["The Collective Mind of Tao"] = "tao"
RuntoKey["The Crimson Horde Clan Hall"] = "crimson"
RuntoKey["The Crusader Clan"] = "crusaders"
RuntoKey["The Emerald Clan HQ"] = "emerald"
RuntoKey["The Fortress of Knowledge"] = "seekers"
RuntoKey["The Halls of Retribution"] = "retri"
RuntoKey["The Halls of Vanir"] = "vanir"
RuntoKey["The Ivory City"] = "amazonclan"
RuntoKey["The Legendary City of Tanelorn"] = "tanelorn"
RuntoKey["The Order of Light"] = "light"
RuntoKey["The Realm of Chaos"] = "chaos"
RuntoKey["The S.S. Hook"] = "hook"
RuntoKey["The Shadokil Guildhouse"] = "shadokil"
RuntoKey["The Stronghold of the Imperium"] = "imperium"
RuntoKey["The Twinlobe Clan HQ"] = "twinlobe"
RuntoKey["The Underground Hall"] = "daoine"
RuntoKey["The White Dragon Clan"] = "dragon"
RuntoKey["The World of the Watchmen"] = "watchmen"
RuntoKey["The Xunti Cult"] = "xunti"
RuntoKey["Touchstone Cavern"] = "touchstone"
RuntoKey["Twilight Hall"] = "pyre"

GaardKey = {}
GaardKey["Kimr's Farm"] = "301"
GaardKey["Lowlands Paradise '96"] = "2"
GaardKey["The Forest of Li'Dnesh"] = "5"
GaardKey["The Path of the Believer"] = "313"
GaardKey["Tournament Camps"] = "8"
GaardKey["Art of Melody"] = "9"
GaardKey["The Call of Heroes"] = "10"
GaardKey["Hotel Orlando"] = "12"
GaardKey["Land of Legend"] = "13"
GaardKey["Sen'narre Lake"] = "14"
GaardKey["The Land of the Beer Goblins"] = "15"
GaardKey["Gallows Hill"] = "11"
GaardKey["Jotunheim"] = "307"
GaardKey["Kingsholm"] = "306"
GaardKey["The Aylorian Academy"] = "258"
GaardKey["The Grand City of Aylor"] = "18"
GaardKey["The Dark Continent, Abend"] = "267"
GaardKey["Vidblain, the Ever Dark"] = "272"
GaardKey["Aardwolf Birthday Area"] = "20"
GaardKey["Chaprenula's Laboratory"] = "250"
GaardKey["Siren's Oasis Resort"] = "21"
GaardKey["The Fire Swamp"] = "265"
GaardKey["The First Ascent"] = "289"
GaardKey["The Graveyard"] = "23"
GaardKey["Den of Thieves"] = "25"
GaardKey["Giant's Pet Store"] = "26"
GaardKey["Sundered Vale"] = "253"
GaardKey["The Amusement Park"] = "27"
GaardKey["The Chessboard"] = "28"
GaardKey["Child's Play"] = "30"
GaardKey["Dortmund"] = "31"
GaardKey["Canyon Memorial Hospital"] = "254"
GaardKey["Fantasy Fields"] = "33"
GaardKey["The Gauntlet"] = "36"
GaardKey["The Wood Elves of Nalondir"] = "37"
GaardKey["A Magical Hodgepodge"] = "38"
GaardKey["Aardwolf Zoological Park"] = "39"
GaardKey["Brightsea and Glimmerdim"] = "326"
GaardKey["Cloud City of Gnomalin"] = "259"
GaardKey["Olde Worlde Carnivale"] = "40"
GaardKey["The Infestation"] = "41"
GaardKey["The Shadows of Minos"] = "255"
GaardKey["The Town of Solan"] = "305"
GaardKey["War of the Wizards"] = "46"
GaardKey["Hatchling Aerie"] = "264"
GaardKey["Adventures in Sendhia"] = "316"
GaardKey["Swordbreaker's Hoard"] = "256"
GaardKey["Kerofk"] = "51"
GaardKey["The Chasm and The Catacombs"] = "251"
GaardKey["Warrior's Training Camp"] = "285"
GaardKey["All in a Fayke Day"] = "53"
GaardKey["Guardian's Spyre of Knowledge"] = "283"
GaardKey["Sho'aram, Castle in the Sand"] = "277"
GaardKey["Fort Terramire"] = "55"
GaardKey["New Thalos"] = "56"
GaardKey["Storm Mountain"] = "57"
GaardKey["Jungles of Verume"] = "59"
GaardKey["Wildwood"] = "317"
GaardKey["Dhal'Gora Outlands"] = "325"
GaardKey["The Temple of Shouggoth"] = "62"
GaardKey["Keep of the Kobaloi"] = "327"
GaardKey["Aerial City of Cineko"] = "350"
GaardKey["Kul Tiras"] = "68"
GaardKey["Necromancers' Guild"] = "69"
GaardKey["The UnderDark"] = "70"
GaardKey["Realm of the Zodiac"] = "257"
GaardKey["Atlantis"] = "74"
GaardKey["Death's Manor"] = "72"
GaardKey["The Fractured Lands"] = "73"
GaardKey["Weather Observatory"] = "299"
GaardKey["The Maelstrom"] = "288"
GaardKey["Ancient Greece"] = "75"
GaardKey["Kingdom of Ahner"] = "76"
GaardKey["Thandeld's Conflict"] = "340"
GaardKey["Sheila's Cat Sanctuary"] = "279"
GaardKey["Mudwog's Swamp"] = "328"
GaardKey["Cradlebrook"] = "80"
GaardKey["The Coral Kingdom"] = "81"
GaardKey["The Labyrinth"] = "82"
GaardKey["Gold Rush"] = "83"
GaardKey["The Imperial City of Reme"] = "84"
GaardKey["The Silver Volcano"] = "85"
GaardKey["Descent to Hell"] = "86"
GaardKey["Onyx Bazaar"] = "261"
GaardKey["The Blighted Tundra of Andarin"] = "300"
GaardKey["Diamond Soul Revelation"] = "88"
GaardKey["The Great Salt Flats"] = "89"
GaardKey["Raganatittu"] = "90"
GaardKey["The Wobbly Woes of Woobleville"] = "92"
GaardKey["The Land of Oz"] = "94"
GaardKey["Castle Vlad-Shamir"] = "97"
GaardKey["Earth Plane 4"] = "98"
GaardKey["The Old Cathedral"] = "100"
GaardKey["Jenny's Tavern"] = "101"
GaardKey["Hedgehogs' Paradise"] = "330"
GaardKey["Plains of Nulan'Boar"] = "278"
GaardKey["The Goblin Fortress"] = "104"
GaardKey["The Palace of Song"] = "319"
GaardKey["The Three Pillars of Diatz"] = "107"
GaardKey["Realm of Deneria"] = "273"
GaardKey["The DarkLight"] = "109"
GaardKey["Rosewood Castle"] = "111"
GaardKey["Imperial Nation"] = "112"
GaardKey["The Tournament of Illoria"] = "113"
GaardKey["Wayward Alehouse"] = "329"
GaardKey["The Empire of Talsa"] = "119"
GaardKey["Northstar"] = "121"
GaardKey["Snuckles Village"] = "122"
GaardKey["The Realm of the Hawklords"] = "281"
GaardKey["Wedded Bliss"] = "124"
GaardKey["Anthrox"] = "125"
GaardKey["Island of Lost Time"] = "127"
GaardKey["Realm of the Firebird"] = "126"
GaardKey["Pompeii"] = "129"
GaardKey["The Monastery"] = "131"
GaardKey["Dark Elf Stronghold"] = "118"
GaardKey["Elemental Chaos"] = "290"
GaardKey["Insanitaria"] = "135"
GaardKey["Ascension Bluff Nursing Home"] = "347"
GaardKey["Dusk Valley"] = "351"
GaardKey["Faerie Tales"] = "136"
GaardKey["Into the Long Night"] = "141"
GaardKey["The Marshlands of Agroth"] = "144"
GaardKey["Tairayden Peninsula"] = "331"
GaardKey["Living Mines of Dak'Tai"] = "291"
GaardKey["Christmas Vacation"] = "146"
GaardKey["The Misty Shores of Yarr"] = "147"
GaardKey["Gilda And The Dragon"] = "148"
GaardKey["The Eighteenth Dynasty"] = "149"
GaardKey["The Slaughter House"] = "151"
GaardKey["Faerie Tales II"] = "153"
GaardKey["House of Cards"] = "275"
GaardKey["The Archipelago of Entropy"] = "154"
GaardKey["A Peaceful Giant Village"] = "164"
GaardKey["The Mountains of Desolation"] = "166"
GaardKey["Desert Doom"] = "168"
GaardKey["Imagi's Nation"] = "360"
GaardKey["Unearthly Bonds"] = "171"
GaardKey["Arisian Realm"] = "174"
GaardKey["Winterlands"] = "175"
GaardKey["The Ruins of Stormhaven"] = "324"
GaardKey["The Witches of Omen Tor"] = "322"
GaardKey["Intrigues of Times Past"] = "280"
GaardKey["The Keep of Kearvek"] = "282"
GaardKey["Tanra'vea"] = "323"
GaardKey["The Temple of Shal'indrael"] = "198"
GaardKey["Umari's Castle"] = "293"
GaardKey["Gypsy Caravan"] = "304"
GaardKey["Ketu Uplands"] = "266"
GaardKey["Realm of the Sacred Flame"] = "287"
GaardKey["The Dungeon of Doom"] = "209"
GaardKey["Loqui Clan Area"] = "217"
GaardKey["Midgaardian Publishing House"] = "219"
GaardKey["The Bard Clan"] = "226"
GaardKey["The Emerald Clan HQ"] = "231"
GaardKey["The Legendary City of Tanelorn"] = "236"
GaardKey["The Underground Hall"] = "244"
GaardKey["The Darkside of the Fractured"] = "91"


]]>
</script>


</muclient>
