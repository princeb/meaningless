<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Saturday, November 19, 2016, 8:11 PM -->
<!-- MuClient version 5.03 -->

<!-- Plugin "MManager" generated by Plugin Wizard -->

<muclient>
<plugin
   name="MManager"
   author="Meaningless"
   id="84fdd38124307d9898c274cc"
   language="Lua"
   purpose="Manages the Meaningless Plugins"
   date_written="2016-11-19 20:10:54"
   requires="5.03"
   version="1.0"
   >

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
</triggers>


<script>
<![CDATA[

-- some globals --
win 				= GetPluginID()
ButtonSize			= 50
ButtonLightBorder	= 0xf7ebdd
ButtonDarkBorder	= 0xb09784
ButtonBackground	= 0xcab9ac
IconColor			= 0x0000ff
PanelBackground		= 0x00000
FontID				= ""
FontDepressedID		= ""
FontName			= "Consolas"
FontSize			= 15

WindowHeight		= 20
WindowWidth			= 100


function OnPluginListChanged ()
	do_plugin_check_now ("abc1a0944ae4af7586ce88dc", "aard_repaint_buffer") -- check we have the repaint buffer plugin
	do_plugin_check_now ("3e7dedbe37e44942dd46d264", "aard_GMCP_handler")    -- check we have GMCP plugin
	do_plugin_check_now ("462b665ecb569efbf261422f", "aard_miniwindow_z_order_monitor") -- check we have z order plugin
end


function DrawQuestButton(state, left, top, right, bottom)
	if state == 'up' then			
		WindowRectOp(win, 2, left, top, left + ButtonSize, top + ButtonSize, ButtonBackground) -- title background
		WindowRectOp(win, 4, left, top, left + ButtonSize, top + ButtonSize, ButtonLightBorder, ButtonDarkBorder) -- title border
		windowText(win, font_id, "Q", left, top, 0, 0, IconColor)
		
	elseif state == 'mousedown' then
		WindowRectOp(win, 2, left, top, left + ButtonSize, top + ButtonSize, ButtonDarkBorder)
		WindowRectOp(win, 2, left + 2, top + 2, left + ButtonSize, top + ButtonSize, ButtonBackground)
		windowText(win, font_id, "Q", left + 2, top + 2, 0, 0, IconColor)
	elseif state == 'down' then
		WindowRectOp(win, 2, left, top, left + ButtonSize, top + ButtonSize, ButtonDarkBorder)
		WindowRectOp(win, 2, left + 1, top + 1, left + ButtonSize, top + ButtonSize, ButtonBackground)
		windowText(win, font_id, "Q", left + 1, top + 1, 0, 0, IconColor)
	end
	
	WindowAddHotspot(win, "Quest",  
		left, top, left + ButtonSize, top + ButtonSize, 
		"",        -- MouseOver
		"",  -- CancelMouseOver
		"MouseDown",        -- MouseDown
		"",  -- CancelMouseDown
		"MouseUp",          -- MouseUp
		"",  -- tooltip text
		cursor, -- cursor
		0)  -- flags
end -- DrawQuestButton

function DrawWindow()
	CallPlugin("462b665ecb569efbf261422f", "registerMiniwindow", win) -- fail silently
	movewindow.add_drag_handler(win, 1, 1, 10, WindowHeight, 1) -- drag the title along dotted bar on left side.
	BroadcastPlugin (999, "repaint")
end - DrawWindow

function OnPluginBroadcast (msg, id, name, text)
	if (id == "462b665ecb569efbf261422f" and msg==996 and text == "re-register z") then
      CallPlugin("462b665ecb569efbf261422f", "registerMiniwindow", win)
	end
end -- OnPluginBroadcast


function OnPluginInstall()
	WindowCreate (win, 1, 1, 1, 1, 0, 0, background_colour)
	SetFontInfo()
	--- install the window movement handler, get back the window position.
	windowinfo = movewindow.install(win, miniwin.pos_top_right, miniwin.create_absolute_location, false, nil, {mouseup=MouseUp, mousedown=LeftClickOnly, dragmove=LeftClickOnly, dragrelease=LeftClickOnly},{x=default_x, y=default_y})
	
	

end -- OnPluginInstall

function SetFontInfo()
	WindowFont(win, FontID, FontName, FontSize, false, false, false, false)
	WindowFont(win, FontDepressedID, FontName, FontSize - , false, false, true, false) --- font of icon when button depressed
end -- SetFontInfo


]]>
</script>


</muclient>
